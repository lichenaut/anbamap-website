---
import { Image } from "astro:assets";
import sqlite3 from "sqlite3";
import * as dbService from "../service/db_service";
import { MediaEntry } from "../service/db_service";

function getNameFromIso(isoCode: string) {
  const countryNames: { [key: string]: string } = {
    ad: "Andorra",
    ae: "United Arab Emirates",
    af: "Afghanistan",
    ag: "Antigua and Barbuda",
    ai: "Anguilla",
    al: "Albania",
    am: "Armenia",
    ao: "Angola",
    aq: "Antarctica",
    ar: "Argentina",
    as: "American Samoa",
    at: "Austria",
    au: "Australia",
    aw: "Aruba",
    ax: "Aland Islands",
    az: "Azerbaijan",
    ba: "Bosnia and Herzegovina",
    bb: "Barbados",
    bd: "Bangladesh",
    be: "Belgium",
    bf: "Burkina Faso",
    bg: "Bulgaria",
    bh: "Bahrain",
    bi: "Burundi",
    bj: "Benin",
    bl: "Saint Barthelemy",
    bm: "Bermuda",
    bn: "Brunei",
    bo: "Bolivia",
    bq: "Bonaire, Sint Eustatius, and Saba",
    br: "Brazil",
    bs: "Bahamas",
    bt: "Bhutan",
    bv: "Bouvet Island",
    bw: "Botswana",
    by: "Belarus",
    bz: "Belize",
    ca: "Canada",
    cc: "Cocos (Keeling) Islands",
    cd: "Democratic Republic of the Congo",
    cf: "Central African Republic",
    cg: "Republic of the Congo",
    ch: "Switzerland",
    ci: "Ivory Coast",
    ck: "Cook Islands",
    cl: "Chile",
    cm: "Cameroon",
    cn: "China",
    co: "Colombia",
    cr: "Costa Rica",
    cu: "Cuba",
    cv: "Cape Verde",
    cw: "Curacao",
    cx: "Christmas Island",
    cy: "Cyprus",
    cz: "Czech Republic",
    de: "Germany",
    dj: "Djibouti",
    dk: "Denmark",
    dm: "Dominica",
    do: "Dominican Republic",
    dz: "Algeria",
    ec: "Ecuador",
    ee: "Estonia",
    eg: "Egypt",
    eh: "Western Sahara",
    er: "Eritrea",
    es: "Spain",
    et: "Ethiopia",
    fi: "Finland",
    fj: "Fiji",
    fk: "Falkland Islands",
    fm: "Micronesia",
    fo: "Faroe Islands",
    fr: "France",
    ga: "Gabon",
    gb: "United Kingdom",
    gd: "Grenada",
    ge: "Georgia",
    gf: "French Guiana",
    gg: "Guernsey",
    gh: "Ghana",
    gi: "Gibraltar",
    gl: "Greenland",
    gm: "Gambia",
    gn: "Guinea",
    gp: "Guadeloupe",
    gq: "Equatorial Guinea",
    gr: "Greece",
    gs: "South Georgia and the South Sandwich Islands",
    gt: "Guatemala",
    gu: "Guam",
    gw: "Guinea-Bissau",
    gy: "Guyana",
    hk: "Hong Kong",
    hm: "Heard Island and McDonald Islands",
    hn: "Honduras",
    hr: "Croatia",
    ht: "Haiti",
    hu: "Hungary",
    id: "Indonesia",
    ie: "Ireland",
    il: "Israel",
    im: "Isle of Man",
    in: "India",
    io: "British Indian Ocean Territory",
    iq: "Iraq",
    ir: "Iran",
    is: "Iceland",
    it: "Italy",
    je: "Jersey",
    jm: "Jamaica",
    jo: "Jordan",
    jp: "Japan",
    ke: "Kenya",
    kg: "Kyrgyzstan",
    kh: "Cambodia",
    ki: "Kiribati",
    km: "Comoros",
    kn: "Saint Kitts and Nevis",
    kp: "North Korea",
    kr: "South Korea",
    kw: "Kuwait",
    ky: "Cayman Islands",
    kz: "Kazakhstan",
    la: "Laos",
    lb: "Lebanon",
    lc: "Saint Lucia",
    li: "Liechtenstein",
    lk: "Sri Lanka",
    lr: "Liberia",
    ls: "Lesotho",
    lt: "Lithuania",
    lu: "Luxembourg",
    lv: "Latvia",
    ly: "Libya",
    ma: "Morocco",
    mc: "Monaco",
    md: "Moldova",
    me: "Montenegro",
    mf: "Saint Martin",
    mg: "Madagascar",
    mh: "Marshall Islands",
    mk: "North Macedonia",
    ml: "Mali",
    mm: "Myanmar",
    mn: "Mongolia",
    mo: "Macau",
    mp: "Northern Mariana Islands",
    mq: "Martinique",
    mr: "Mauritania",
    ms: "Montserrat",
    mt: "Malta",
    mu: "Mauritius",
    mv: "Maldives",
    mw: "Malawi",
    mx: "Mexico",
    my: "Malaysia",
    mz: "Mozambique",
    na: "Namibia",
    nc: "New Caledonia",
    ne: "Niger",
    nf: "Norfolk Island",
    ng: "Nigeria",
    ni: "Nicaragua",
    nl: "Netherlands",
    no: "Norway",
    np: "Nepal",
    nr: "Nauru",
    nu: "Niue",
    nz: "New Zealand",
    om: "Oman",
    pa: "Panama",
    pe: "Peru",
    pf: "French Polynesia",
    pg: "Papua New Guinea",
    ph: "Philippines",
    pk: "Pakistan",
    pl: "Poland",
    pm: "Saint Pierre and Miquelon",
    pn: "Pitcairn Islands",
    pr: "Puerto Rico",
    ps: "Palestine",
    pt: "Portugal",
    pw: "Palau",
    py: "Paraguay",
    qa: "Qatar",
    re: "Reunion",
    ro: "Romania",
    rs: "Serbia",
    ru: "Russia",
    rw: "Rwanda",
    sa: "Saudi Arabia",
    sb: "Solomon Islands",
    sc: "Seychelles",
    sd: "Sudan",
    se: "Sweden",
    sg: "Singapore",
    sh: "Saint Helena",
    si: "Slovenia",
    sj: "Svalbard and Jan Mayen",
    sk: "Slovakia",
    sl: "Sierra Leone",
    sm: "San Marino",
    sn: "Senegal",
    so: "Somalia",
    sr: "Suriname",
    ss: "South Sudan",
    st: "Sao Tome and Principe",
    sv: "El Salvador",
    sx: "Sint Maarten",
    sy: "Syria",
    sz: "Eswatini",
    tc: "Turks and Caicos Islands",
    td: "Chad",
    tf: "French Southern Territories",
    tg: "Togo",
    th: "Thailand",
    tj: "Tajikistan",
    tk: "Tokelau",
    tl: "East Timor",
    tm: "Turkmenistan",
    tn: "Tunisia",
    to: "Tonga",
    tr: "Turkey",
    tt: "Trinidad and Tobago",
    tv: "Tuvalu",
    tw: "Taiwan",
    tz: "Tanzania",
    ua: "Ukraine",
    ug: "Uganda",
    um: "United States Minor Outlying Islands",
    us: "United States",
    uy: "Uruguay",
    uz: "Uzbekistan",
    va: "Vatican City",
    vc: "Saint Vincent and the Grenadines",
    ve: "Venezuela",
    vg: "British Virgin Islands",
    vi: "United States Virgin Islands",
    vn: "Vietnam",
    vu: "Vanuatu",
    wf: "Wallis and Futuna",
    ws: "Samoa",
    ye: "Yemen",
    yt: "Mayotte",
    xk: "Kosovo",
    za: "South Africa",
    zm: "Zambia",
    zw: "Zimbabwe",
  };

  return countryNames[isoCode] || null;
}

let { region } = Astro.params;
if (region === undefined) {
  throw new Error("Region is required");
}

let db: sqlite3.Database = dbService.getDatabase();
let urls_regions: Map<string, string[]> = await dbService.getUrlsRegions(
  db,
  region
);
let media_entries: MediaEntry[] = await dbService.getMediaEntries(
  db,
  urls_regions
);
dbService.closeDatabase(db);
media_entries.sort((a, b) => b.timestamp - a.timestamp);
export const prerender = true;

export function getStaticPaths() {
  return [
    { params: { region: "ad" } },
    { params: { region: "ae" } },
    { params: { region: "af" } },
    { params: { region: "ag" } },
    { params: { region: "ai" } },
    { params: { region: "al" } },
    { params: { region: "am" } },
    { params: { region: "ao" } },
    { params: { region: "aq" } },
    { params: { region: "ar" } },
    { params: { region: "as" } },
    { params: { region: "at" } },
    { params: { region: "au" } },
    { params: { region: "aw" } },
    { params: { region: "ax" } },
    { params: { region: "az" } },
    { params: { region: "ba" } },
    { params: { region: "bb" } },
    { params: { region: "bd" } },
    { params: { region: "be" } },
    { params: { region: "bf" } },
    { params: { region: "bg" } },
    { params: { region: "bh" } },
    { params: { region: "bi" } },
    { params: { region: "bj" } },
    { params: { region: "bl" } },
    { params: { region: "bm" } },
    { params: { region: "bn" } },
    { params: { region: "bo" } },
    { params: { region: "bq" } },
    { params: { region: "br" } },
    { params: { region: "bs" } },
    { params: { region: "bt" } },
    { params: { region: "bv" } },
    { params: { region: "bw" } },
    { params: { region: "by" } },
    { params: { region: "bz" } },
    { params: { region: "ca" } },
    { params: { region: "cc" } },
    { params: { region: "cd" } },
    { params: { region: "cf" } },
    { params: { region: "cg" } },
    { params: { region: "ch" } },
    { params: { region: "ci" } },
    { params: { region: "ck" } },
    { params: { region: "cl" } },
    { params: { region: "cm" } },
    { params: { region: "cn" } },
    { params: { region: "co" } },
    { params: { region: "cr" } },
    { params: { region: "cu" } },
    { params: { region: "cv" } },
    { params: { region: "cw" } },
    { params: { region: "cx" } },
    { params: { region: "cy" } },
    { params: { region: "cz" } },
    { params: { region: "de" } },
    { params: { region: "dj" } },
    { params: { region: "dk" } },
    { params: { region: "dm" } },
    { params: { region: "do" } },
    { params: { region: "dz" } },
    { params: { region: "ec" } },
    { params: { region: "ee" } },
    { params: { region: "eg" } },
    { params: { region: "eh" } },
    { params: { region: "er" } },
    { params: { region: "es" } },
    { params: { region: "et" } },
    { params: { region: "fi" } },
    { params: { region: "fj" } },
    { params: { region: "fk" } },
    { params: { region: "fm" } },
    { params: { region: "fo" } },
    { params: { region: "fr" } },
    { params: { region: "ga" } },
    { params: { region: "gb" } },
    { params: { region: "gd" } },
    { params: { region: "ge" } },
    { params: { region: "gf" } },
    { params: { region: "gg" } },
    { params: { region: "gh" } },
    { params: { region: "gi" } },
    { params: { region: "gl" } },
    { params: { region: "gm" } },
    { params: { region: "gn" } },
    { params: { region: "gp" } },
    { params: { region: "gq" } },
    { params: { region: "gr" } },
    { params: { region: "gs" } },
    { params: { region: "gt" } },
    { params: { region: "gu" } },
    { params: { region: "gw" } },
    { params: { region: "gy" } },
    { params: { region: "hk" } },
    { params: { region: "hm" } },
    { params: { region: "hn" } },
    { params: { region: "hr" } },
    { params: { region: "ht" } },
    { params: { region: "hu" } },
    { params: { region: "id" } },
    { params: { region: "ie" } },
    { params: { region: "il" } },
    { params: { region: "im" } },
    { params: { region: "in" } },
    { params: { region: "io" } },
    { params: { region: "iq" } },
    { params: { region: "ir" } },
    { params: { region: "is" } },
    { params: { region: "it" } },
    { params: { region: "je" } },
    { params: { region: "jm" } },
    { params: { region: "jo" } },
    { params: { region: "jp" } },
    { params: { region: "ke" } },
    { params: { region: "kg" } },
    { params: { region: "kh" } },
    { params: { region: "ki" } },
    { params: { region: "km" } },
    { params: { region: "kn" } },
    { params: { region: "kp" } },
    { params: { region: "kr" } },
    { params: { region: "kw" } },
    { params: { region: "ky" } },
    { params: { region: "kz" } },
    { params: { region: "la" } },
    { params: { region: "lb" } },
    { params: { region: "lc" } },
    { params: { region: "li" } },
    { params: { region: "lk" } },
    { params: { region: "lr" } },
    { params: { region: "ls" } },
    { params: { region: "lt" } },
    { params: { region: "lu" } },
    { params: { region: "lv" } },
    { params: { region: "ly" } },
    { params: { region: "ma" } },
    { params: { region: "mc" } },
    { params: { region: "md" } },
    { params: { region: "me" } },
    { params: { region: "mf" } },
    { params: { region: "mg" } },
    { params: { region: "mh" } },
    { params: { region: "mk" } },
    { params: { region: "ml" } },
    { params: { region: "mm" } },
    { params: { region: "mn" } },
    { params: { region: "mo" } },
    { params: { region: "mp" } },
    { params: { region: "mq" } },
    { params: { region: "mr" } },
    { params: { region: "ms" } },
    { params: { region: "mt" } },
    { params: { region: "mu" } },
    { params: { region: "mv" } },
    { params: { region: "mw" } },
    { params: { region: "mx" } },
    { params: { region: "my" } },
    { params: { region: "mz" } },
    { params: { region: "na" } },
    { params: { region: "nc" } },
    { params: { region: "ne" } },
    { params: { region: "nf" } },
    { params: { region: "ng" } },
    { params: { region: "ni" } },
    { params: { region: "nl" } },
    { params: { region: "no" } },
    { params: { region: "np" } },
    { params: { region: "nr" } },
    { params: { region: "nu" } },
    { params: { region: "nz" } },
    { params: { region: "om" } },
    { params: { region: "pa" } },
    { params: { region: "pe" } },
    { params: { region: "pf" } },
    { params: { region: "pg" } },
    { params: { region: "ph" } },
    { params: { region: "pk" } },
    { params: { region: "pl" } },
    { params: { region: "pm" } },
    { params: { region: "pn" } },
    { params: { region: "pr" } },
    { params: { region: "ps" } },
    { params: { region: "pt" } },
    { params: { region: "pw" } },
    { params: { region: "py" } },
    { params: { region: "qa" } },
    { params: { region: "re" } },
    { params: { region: "ro" } },
    { params: { region: "rs" } },
    { params: { region: "ru" } },
    { params: { region: "rw" } },
    { params: { region: "sa" } },
    { params: { region: "sb" } },
    { params: { region: "sc" } },
    { params: { region: "sd" } },
    { params: { region: "se" } },
    { params: { region: "sg" } },
    { params: { region: "sh" } },
    { params: { region: "si" } },
    { params: { region: "sj" } },
    { params: { region: "sk" } },
    { params: { region: "sl" } },
    { params: { region: "sm" } },
    { params: { region: "sn" } },
    { params: { region: "so" } },
    { params: { region: "sr" } },
    { params: { region: "ss" } },
    { params: { region: "st" } },
    { params: { region: "sv" } },
    { params: { region: "sx" } },
    { params: { region: "sy" } },
    { params: { region: "sz" } },
    { params: { region: "tc" } },
    { params: { region: "td" } },
    { params: { region: "tf" } },
    { params: { region: "tg" } },
    { params: { region: "th" } },
    { params: { region: "tj" } },
    { params: { region: "tk" } },
    { params: { region: "tl" } },
    { params: { region: "tm" } },
    { params: { region: "tn" } },
    { params: { region: "to" } },
    { params: { region: "tr" } },
    { params: { region: "tt" } },
    { params: { region: "tv" } },
    { params: { region: "tw" } },
    { params: { region: "tz" } },
    { params: { region: "ua" } },
    { params: { region: "ug" } },
    { params: { region: "um" } },
    { params: { region: "us" } },
    { params: { region: "uy" } },
    { params: { region: "uz" } },
    { params: { region: "va" } },
    { params: { region: "vc" } },
    { params: { region: "ve" } },
    { params: { region: "vg" } },
    { params: { region: "vi" } },
    { params: { region: "vn" } },
    { params: { region: "vu" } },
    { params: { region: "wf" } },
    { params: { region: "ws" } },
    { params: { region: "ye" } },
    { params: { region: "yt" } },
    { params: { region: "za" } },
    { params: { region: "zm" } },
    { params: { region: "zw" } },
  ];
}
---

<meta charset="UTF-8" />
<link rel="stylesheet" href="/global.css" />
<ol>
  {
    media_entries.map(async (item) => (
      <div class="p-2 m-2 border border-gray-600 w-3/5 mx-auto rounded-lg">
        <li>
          <a href={item.url} target="_blank" class="flex">
            <Image
              src={item.image_url}
              alt="media icon"
              width={1}
              height={1}
              class="size-1/6 max-w-fit max-h-fit rounded-lg"
            />
            <div class="ml-2">
              <p class="text-gray-800 font-bold"> {item.title}</p>
              <p class="text-gray-600">{item.date}</p>
              <p class="text-gray-800">{item.body}</p>
            </div>
          </a>
          {item.regions.map((region) => (
            <a href={"http://localhost:4321/" + region}>
              <button class="inline-block p-1 mt-2 mr-2 border border-gray-600 rounded-lg">
                <p class="text-gray-800">{getNameFromIso(region)}</p>
              </button>
            </a>
          ))}
        </li>
      </div>
    ))
  }
</ol>

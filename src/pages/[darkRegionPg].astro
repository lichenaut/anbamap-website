---
import { DateTime } from "luxon";
import sqlite3 from "sqlite3";
import * as dbService from "../services/db_service";
import { MediaEntry } from "../services/db_service";
import * as longService from "../services/long_service";
import worldImage from "../assets/world.png";
import PageManagerDarkC from "../components/PageManagerDarkC.astro";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  return longService.getDarkRegionPgPaths();
}

let { darkRegionPg } = Astro.params;
if (darkRegionPg === undefined) {
  throw new Error("Region is required");
}

let regionPgParts: string[] = darkRegionPg.split("-");
let region: string = regionPgParts[1];
let pageString: string = regionPgParts[2];
let page: number = parseInt(pageString);
let now: number = DateTime.utc().toSeconds();
let todayStart: number = now - (now % 86400);
let rangeMin = todayStart - (page - 1) * 86400;
let rangeMax = todayStart - (page - 2) * 86400;
let db: sqlite3.Database | null = null;
let mediaEntries: MediaEntry[] | null = null;
try {
  db = dbService.getDatabase();
  let urlsRegions: Map<string, string[]> = await dbService.getUrlsRegions(
    db,
    region
  );
  mediaEntries = await dbService.getMediaEntries(
    db,
    urlsRegions,
    rangeMin,
    rangeMax
  );
} catch (error) {
  throw new Error(error);
} finally {
  if (db) {
    dbService.closeDatabase(db);
  }
}
mediaEntries.sort((a, b) => b.timestamp - a.timestamp);

let url = new URL(Astro.request.url);
let origin = url.origin;
let previous: string = origin + "/" + region + "-" + (page - 1);
let next: string = origin + "/" + region + "-" + (page + 1);
---

<meta charset="UTF-8" />
<title>
  {
    longService.getNameFromIso(region) +
      " " +
      DateTime.fromSeconds(rangeMax).toFormat("LLLL d, yyyy")
  }
</title>
<link rel="stylesheet" href="/global.css" />
<body class="bg-custom-gray">
  <div style="position: fixed; top: 1rem; left: 1rem;">
    <a href={origin}>
      <button class="inline-block">
        <Image
          src={worldImage}
          alt="world icon"
          width={48}
          height={48}
          loading="eager"
        />
      </button>
    </a>
  </div>
  <div class="pt-4 mx-auto w-fit text-center flex space-x-2">
    <p class="text-4xl font-bold text-white">
      {longService.getNameFromIso(region)}
      {DateTime.fromSeconds(rangeMax).toFormat("LLLL d, yyyy")}
    </p>
  </div>
  <PageManagerDarkC
    page={page}
    previous={previous}
    next={next}
    origin={origin}
    region={region}
  />
  <div class="pb-2 border-b border-white mx-auto w-4/5"></div>
  <ol>
    {
      mediaEntries.map(async (item) => (
        <div class="p-2 m-2 border border-custom-white w-3/5 mx-auto rounded-lg">
          <li>
            <a href={item.url} target="_blank" class="flex">
              <Image
                src={item.image_url}
                alt="media icon"
                width={1}
                height={1}
                class="size-1/6 max-w-fit max-h-fit rounded-lg"
              />
              <div class="ml-2">
                <p class="text-white font-bold"> {item.title}</p>
                <p class="text-custom-white">{item.date}</p>
                <p class="text-white">{item.body}</p>
              </div>
            </a>
            <div class="mt-2 mb-2 flex justify-between items-center">
              <div class="border-b border-custom-white w-1/2" />
              <p class="text-custom-white text-xs mx-2">GEOKEYS</p>
              <div class="border-b border-custom-white w-1/2" />
            </div>
            {item.regions.map((region) => (
              <a href={origin + "/" + region + "-" + pageString}>
                <button class="inline-block p-1 mr-1 mb-2 border border-custom-white rounded-lg">
                  <p class="text-white">{longService.getNameFromIso(region)}</p>
                </button>
              </a>
            ))}
          </li>
        </div>
      ))
    }
  </ol>
  <PageManagerDarkC
    page={page}
    previous={previous}
    next={next}
    origin={origin}
    region={region}
  />
  <div class="p-2 mx-auto">
    <a
      href="https://www.flaticon.com/free-icons/world"
      target="_blank"
      title="world icons"
      class="text-white">World icon created by prettycons - Flaticon</a
    >
  </div>
</body>

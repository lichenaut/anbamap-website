---
interface Props {
  regionCode: string;
  regionName: string;
  pageNumber: number;
}

let { regionCode, regionName, pageNumber }: Props = Astro.props;
---

<div
  id="regionInfo"
  data-region-code={regionCode}
  data-region-name={regionName}
  data-page-number={pageNumber}
>
</div>
<script>
  import { DateTime } from "luxon";
  import * as datasetService from "../../services/dataset_service";

  function convertTimestamps() {
    const mediaList: HTMLElement | null = document.getElementById("mediaList");
    if (!mediaList) {
      return;
    }

    let regionElement = datasetService.getElementById("regionInfo");
    let regionName: string = datasetService.getDatasetValue(
      regionElement,
      "regionName"
    );
    let regionCode: string = datasetService.getDatasetValue(
      regionElement,
      "regionCode"
    );
    let pageNumber: number =
      parseInt(datasetService.getDatasetValue(regionElement, "pageNumber")) - 1;
    let localNowTime: number = Math.floor(Date.now() / 1000);
    let pageNowTime: number = localNowTime - pageNumber * 86400;
    let pageDate: string = DateTime.fromSeconds(pageNowTime)
      .setZone(Intl.DateTimeFormat().resolvedOptions().timeZone)
      .toLocaleString(DateTime.DATETIME_FULL)
      .substring(0, 12);
    let titleElement: HTMLElement | null = document.querySelector("title");
    if (!titleElement) {
      return;
    }
    let headerElement: HTMLElement | null =
      document.querySelector("p.text-4xl");
    if (!headerElement) {
      return;
    }
    titleElement.textContent = regionCode + " " + pageDate;
    headerElement.textContent = regionName + " " + pageDate;
    const mediaEntries: Element[] = Array.from(mediaList.children);
    mediaEntries.forEach((entry) => {
      let timeElement: Element = Array.from(
        entry.querySelectorAll("p.text-gray-600")
      )[0];

      let timeString: string | null = timeElement.textContent;
      if (timeString === null) {
        return;
      }

      let time: number = parseInt(timeString);
      let localTime: string = DateTime.fromSeconds(time)
        .setZone(Intl.DateTimeFormat().resolvedOptions().timeZone)
        .toLocaleString(DateTime.DATETIME_FULL);

      if (!localTime.includes(pageDate)) {
        entry.remove();
        return;
      }

      timeElement.textContent = localTime;
    });
  }

  window.addEventListener("DOMContentLoaded", convertTimestamps);
</script>
